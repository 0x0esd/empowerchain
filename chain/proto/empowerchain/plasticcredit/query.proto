syntax = "proto3";
package empowerchain.plasticcredit;

import "cosmos/base/query/v1beta1/pagination.proto";
import "empowerchain/plasticcredit/types.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/empowerchain/empowerchain/x/plasticcredit";

service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/empowerchain/empowerchain/plasticcredit/params";
  }

  rpc Issuers(QueryIssuersRequest) returns (QueryIssuersResponse) {
    option (google.api.http).get = "/empowerchain/empowerchain/plasticcredit/issuers";
  }

  rpc Issuer(QueryIssuerRequest) returns (QueryIssuerResponse) {
    option (google.api.http).get = "/empowerchain/empowerchain/plasticcredit/issuers/{issuer_id}";
  }

  rpc Applicant(QueryApplicantRequest) returns (QueryApplicantResponse) {
    option (google.api.http).get = "/empowerchain/empowerchain/plasticcredit/applicants/{applicant_id}";
  }

  rpc CreditCollection(QueryCreditCollectionRequest) returns (QueryCreditCollectionResponse) {
    option (google.api.http).get = "/empowerchain/empowerchain/plasticcredit/creditcollections/{denom}";
  }

  rpc CreditBalance(QueryCreditBalanceRequest) returns (QueryCreditBalanceResponse) {
    option (google.api.http).get = "/empowerchain/empowerchain/plasticcredit/creditbalances/{owner}/{denom}";
  }
}

message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryIssuersRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryIssuersResponse {
  repeated Issuer issuers = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryIssuerRequest {
  uint64 issuer_id = 1;
}

message QueryIssuerResponse {
  Issuer issuer = 1;
}

message QueryApplicantRequest {
  uint64 applicant_id = 1;
}

message QueryApplicantResponse {
  Applicant applicant = 1;
}

message QueryCreditCollectionRequest {
  string denom = 1;
}

message QueryCreditCollectionResponse {
  string denom = 1;
  CreditCollection credit_collection = 2;
}

message QueryCreditBalanceRequest {
  string owner = 1;
  string denom = 2;
}

message QueryCreditBalanceResponse {
  string owner = 1;
  string denom = 2;
  CreditBalance credit_amount = 3;
}